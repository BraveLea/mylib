# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../../../third_party/gtest

# Where to find user code.
USER_DIR = ../../../base

THIRD_PATH = ../../../public

CUSTOM_THIRD_PATH = ./../../../third_party

LINK_PATHS = -L./ -L/usr/local/libmemcached-1.0.7/lib/  -L/usr/lib64/mysql

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g  -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = test_consumer
                
USER_HEADERS =  /usr/include/mysql/*.h \
				/usr/local/freetds/include/*.h \
				$(THIRD_PATH)/*/*.h \
                $(USER_DIR)/*/*.h \
                $(CUSTOM_THIRD_PATH)/hiredis/*.h \
                
INCLUDE_PATHS = -I/usr/local/libmemcached-1.0.7/include \
				-I$(THIRD_PATH)\
				-I/usr/local/include\
				-I/usr/include/mysql\
				-I$(USER_DIR)\
				-I$(CUSTOM_THIRD_PATH)/hiredis\
				-I$(CUSTOM_THIRD_PATH)\


# House-keeping build targets.

ALL_HEADERS = $(USER_HEADERS)
all : $(TESTS)

clean :
	rm -f $(TESTS)
	
	
base_values.o : $(USER_DIR)/logic/base_values.cc $(USER_DIR)/logic/base_values.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/logic/base_values.cc $(INCLUDE_PATHS) 

value_serializer.o : $(USER_DIR)/logic/value_serializer.cc $(USER_DIR)/logic/value_serializer.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/logic/value_serializer.cc $(INCLUDE_PATHS) 

basic_util.o : $(THIRD_PATH)/basic/basic_util.cc $(THIRD_PATH)/basic/basic_util.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/basic_util.cc $(INCLUDE_PATHS)
	
icu_utf.o : $(THIRD_PATH)/basic/icu_utf.cc $(THIRD_PATH)/basic/icu_utf.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/icu_utf.cc $(INCLUDE_PATHS)
	
basic_info.o : $(THIRD_PATH)/basic/basic_info.cc $(THIRD_PATH)/basic/basic_info.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/basic_info.cc $(INCLUDE_PATHS)

md5sum.o : $(THIRD_PATH)/basic/md5sum.cc $(THIRD_PATH)/basic/md5sum.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/md5sum.cc $(INCLUDE_PATHS)
	
radom_in.o : $(THIRD_PATH)/basic/radom_in.cc $(THIRD_PATH)/basic/radom_in.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/radom_in.cc $(INCLUDE_PATHS)

constants.o : $(THIRD_PATH)/basic/constants.cc $(THIRD_PATH)/basic/constants.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/constants.cc $(INCLUDE_PATHS)
	
base64.o : $(THIRD_PATH)/basic/base64.cc $(THIRD_PATH)/basic/base64.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/basic/base64.cc $(INCLUDE_PATHS)

test_consumer.o : ./test_consumer.cc $(USER_DIR)/logic/base_values.h ./Consumer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ./test_consumer.cc $(INCLUDE_PATHS)

dic_serialization.o:$(THIRD_PATH)/storage/dic_serialization.cc $(THIRD_PATH)/storage/dic_serialization.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/storage/dic_serialization.cc $(INCLUDE_PATHS)

redis_storage_impl.o:$(THIRD_PATH)/storage/redis_storage_impl.cc $(THIRD_PATH)/storage/redis_storage_impl.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/storage/redis_storage_impl.cc $(INCLUDE_PATHS)
	
redis_warrper.o: $(THIRD_PATH)/storage/redis_warrper.c $(THIRD_PATH)/storage/redis_warrper.h $(GTEST_HEADERS)
	gcc -std=c99 -pedantic -c $(INCLUDE_PATHS) -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb $(THIRD_PATH)/storage/redis_warrper.c $(INCLUDE_PATHS)
	
	
##JSON
json_reader.o:$(THIRD_PATH)/json/json_reader.cpp $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/json/json_reader.cpp $(INCLUDE_PATHS)

json_value.o:$(THIRD_PATH)/json/json_value.cpp  $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/json/json_value.cpp $(INCLUDE_PATHS)

json_writer.o:$(THIRD_PATH)/json/json_writer.cpp $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/json/json_writer.cpp $(INCLUDE_PATHS)
	
#日志
mig_log.o:$(THIRD_PATH)/log/mig_log.cc $(THIRD_PATH)/log/mig_log.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(THIRD_PATH)/log/mig_log.cc $(INCLUDE_PATHS)


test_consumer : test_consumer.o base_values.o value_serializer.o mig_log.o basic_util.o\
	 basic_info.o\
	 json_writer.o md5sum.o radom_in.o constants.o base64.o dic_serialization.o icu_utf.o\
	json_value.o json_reader.o redis_storage_impl.o redis_warrper.o ../../../base/lib/mybase.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(LINK_PATHS) -lpthread -lcurl -liconv -lmemcached -lmemcachedutil\
	 -lmysqlclient $^ -o $@
